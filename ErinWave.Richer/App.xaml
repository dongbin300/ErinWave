<Application x:Class="ErinWave.Richer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ErinWave.Richer"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converter="clr-namespace:ErinWave.Richer.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <SolidColorBrush x:Key="DarkBackground" Color="#1E1E1E"/>
        <SolidColorBrush x:Key="DarkForeground" Color="#F1F1F1"/>
        <SolidColorBrush x:Key="SelectedBackground" Color="#444D56"/>
        <SolidColorBrush x:Key="ThemeColor" Color="#FCD535"/>
        <SolidColorBrush x:Key="LongColor" Color="#3BCF86"/>
        <SolidColorBrush x:Key="ShortColor" Color="#ED3161"/>

        <FontFamily x:Key="BaseFont">Meiryo UI</FontFamily>
        <sys:Double x:Key="BaseFontSize">12</sys:Double>

        <BooleanToVisibilityConverter x:Key="btv"/>
        <converter:QuantityToWidthConverter x:Key="qtw"/>
        <converter:OrderSideColorConverter x:Key="osc"/>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="Description">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="9" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="#565656" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="CaretBrush" Value="{StaticResource ThemeColor}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource ThemeColor}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="#666" BorderThickness="0" />
                <Border x:Name="ContentBorder" Grid.Column="0" Margin="1" Background="Transparent" BorderBrush="#999" BorderThickness="0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="#F4F4f4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAA" />
                    <Setter Property="Foreground" Value="#111"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333337" BorderThickness="1.2" BorderBrush="#666"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="22" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="5 0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource ThemeColor}" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding Foreground}"
                        BorderThickness="1">
                            <TextBlock Name="TextBlock" 
                          Text="{TemplateBinding Content}" 
                          Margin="{TemplateBinding Padding}"
                          Foreground="{TemplateBinding Foreground}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeColor}" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
            <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            <Setter Property="Background" Value="{StaticResource DarkBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource DarkBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="GridLinesVisibility" Value="None" />
            <Setter Property="RowHeight" Value="21"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#121212"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkExpandCollapseToggle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="15" Background="Transparent">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FFFFFF" Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0 0 L 4 8 L 8 0 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}" x:Key="ButtonCell" >
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style TargetType="{x:Type Slider}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SelectionStart" Value="0"/>
            <Setter Property="SelectionEnd" Value="{Binding RelativeSource={RelativeSource Self}, Path=Value}"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="Margin" Value="7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Border Background="{StaticResource SelectedBackground}" Height="12" CornerRadius="5"/>
                                <Track x:Name="PART_Track">
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Template>
                                                <ControlTemplate>
                                                    <Ellipse Width="12" Height="12" Fill="{StaticResource ThemeColor}"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
